{
  "name": "VDateInput",
  "props": {
    "active": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Controls the active state of the item. This is typically used to highlight the component.",
      "description_zh": "Controls the active state of the item. This is typically used to highlight the component.",
      "required": false
    },
    "allowed-dates": {
      "default": "undefined",
      "value": "",
      "type": "unknown[] | ((date: unknown) => boolean)",
      "version": "",
      "description": "Restricts which dates can be selected.",
      "description_zh": "Restricts which dates can be selected.",
      "required": false
    },
    "append-icon": {
      "default": "undefined",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Creates a v-icon component after default content in the append slot.",
      "description_zh": "Creates a v-icon component after default content in the append slot.",
      "required": false
    },
    "append-inner-icon": {
      "default": "undefined",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Creates a v-icon component in the append-inner slot.",
      "description_zh": "Creates a v-icon component in the append-inner slot.",
      "required": false
    },
    "autofocus": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Enables autofocus.",
      "description_zh": "Enables autofocus.",
      "required": false
    },
    "base-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the color of the input when it is not focused.",
      "description_zh": "Sets the color of the input when it is not focused.",
      "required": false
    },
    "bg-color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Applies specified color to the control’s background. Used on components that also support the color prop. - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "Applies specified color to the control’s background. Used on components that also support the color prop. - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "required": false
    },
    "border": {
      "default": "false",
      "value": "",
      "type": "string | number | boolean",
      "version": "",
      "description": "Designates the border-radius applied to the component. This can be xs, sm, md, lg, xl.",
      "description_zh": "Designates the border-radius applied to the component. This can be xs, sm, md, lg, xl.",
      "required": false
    },
    "cancel-text": {
      "default": "'$vuetify.confirmEdit.cancel'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Text for the cancel button",
      "description_zh": "Text for the cancel button",
      "required": false
    },
    "center-affix": {
      "default": "undefined",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Vertically align appendInner, prependInner, clearIcon and label in the center.",
      "description_zh": "Vertically align appendInner, prependInner, clearIcon and label in the center.",
      "required": false
    },
    "clearable": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Allows for the component to be cleared.",
      "description_zh": "Allows for the component to be cleared.",
      "required": false
    },
    "clear-icon": {
      "default": "'$clear'",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "The icon used when the clearable prop is set to true.",
      "description_zh": "The icon used when the clearable prop is set to true.",
      "required": false
    },
    "color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "required": false
    },
    "counter": {
      "default": "false",
      "value": "",
      "type": "string | number | boolean",
      "version": "",
      "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
      "description_zh": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
      "required": false
    },
    "counter-value": {
      "default": "undefined",
      "value": "",
      "type": "number | ((value: any) => number)",
      "version": "",
      "description": "Function returns the counter display text.",
      "description_zh": "Function returns the counter display text.",
      "required": false
    },
    "density": {
      "default": "'default'",
      "value": "",
      "type": "'default' | 'comfortable' | 'compact'",
      "version": "",
      "description": "Adjusts the vertical height used by the component.",
      "description_zh": "Adjusts the vertical height used by the component.",
      "required": false
    },
    "direction": {
      "default": "'horizontal'",
      "value": "",
      "type": "'horizontal' | 'vertical'",
      "version": "",
      "description": "Changes the direction of the input.",
      "description_zh": "Changes the direction of the input.",
      "required": false
    },
    "dirty": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Manually apply the dirty state styling.",
      "description_zh": "Manually apply the dirty state styling.",
      "required": false
    },
    "disabled": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Removes the ability to click or target the input.",
      "description_zh": "Removes the ability to click or target the input.",
      "required": false
    },
    "display-value": {
      "default": "undefined",
      "value": "",
      "type": "unknown",
      "version": "",
      "description": "The value that determines the month to show. This is different from modelValue, which determines the selected value.",
      "description_zh": "The value that determines the month to show. This is different from modelValue, which determines the selected value.",
      "required": false
    },
    "elevation": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the elevation page.",
      "description_zh": "Designates an elevation applied to the component between 0 and 24. You can find more information on the elevation page.",
      "required": false
    },
    "error": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Puts the input in a manual error state.",
      "description_zh": "Puts the input in a manual error state.",
      "required": false
    },
    "error-messages": {
      "default": "[]",
      "value": "",
      "type": "string | string[]",
      "version": "",
      "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the rules prop. This field will not trigger validation.",
      "description_zh": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the rules prop. This field will not trigger validation.",
      "required": false
    },
    "first-day-of-week": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the first day of the week, starting with 0 for Sunday.",
      "description_zh": "Sets the first day of the week, starting with 0 for Sunday.",
      "required": false
    },
    "flat": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Removes box shadow when using a variant with elevation.",
      "description_zh": "Removes box shadow when using a variant with elevation.",
      "required": false
    },
    "focused": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Forces a focused state styling on the component.",
      "description_zh": "Forces a focused state styling on the component.",
      "required": false
    },
    "header": {
      "default": "'$vuetify.datePicker.header'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Text shown when no display-date is set.",
      "description_zh": "Text shown when no display-date is set.",
      "required": false
    },
    "height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the height of the input.",
      "description_zh": "Sets the height of the input.",
      "required": false
    },
    "hide-actions": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "required": false
    },
    "hide-details": {
      "default": "false",
      "value": "",
      "type": "boolean | 'auto'",
      "version": "",
      "description": "Hides hint and validation errors. When set to auto messages will be rendered only if there’s a message (hint, error message, counter value etc) to display.",
      "description_zh": "Hides hint and validation errors. When set to auto messages will be rendered only if there’s a message (hint, error message, counter value etc) to display.",
      "required": false
    },
    "hide-header": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Hide the picker header.",
      "description_zh": "Hide the picker header.",
      "required": false
    },
    "hide-spin-buttons": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Hides spin buttons on the input when type is set to number.",
      "description_zh": "Hides spin buttons on the input when type is set to number.",
      "required": false
    },
    "hide-weekdays": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Hide the days of the week letters.",
      "description_zh": "Hide the days of the week letters.",
      "required": false
    },
    "hint": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Displays hint text below the input when focused. Force this always open with the persistent-hint property.",
      "description_zh": "Displays hint text below the input when focused. Force this always open with the persistent-hint property.",
      "required": false
    },
    "id": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the DOM id on the component.",
      "description_zh": "Sets the DOM id on the component.",
      "required": false
    },
    "label": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the text of the v-label or v-field-label component.",
      "description_zh": "Sets the text of the v-label or v-field-label component.",
      "required": false
    },
    "landscape": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Puts the picker into landscape mode.",
      "description_zh": "Puts the picker into landscape mode.",
      "required": false
    },
    "loading": {
      "default": "false",
      "value": "",
      "type": "string | boolean",
      "version": "",
      "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it’s supported by the component) or the primary color.",
      "description_zh": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it’s supported by the component) or the primary color.",
      "required": false
    },
    "location": {
      "default": "undefined",
      "value": "",
      "type": "Anchor",
      "version": "",
      "description": "Specifies the component’s location. Can combine by using a space separated string.",
      "description_zh": "Specifies the component’s location. Can combine by using a space separated string.",
      "required": false
    },
    "max": {
      "default": "undefined",
      "value": "",
      "type": "unknown",
      "version": "",
      "description": "Maximum allowed date/month (ISO 8601 format).",
      "description_zh": "Maximum allowed date/month (ISO 8601 format).",
      "required": false
    },
    "max-errors": {
      "default": "1",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Control the maximum number of shown errors from validation.",
      "description_zh": "Control the maximum number of shown errors from validation.",
      "required": false
    },
    "max-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the maximum height for the component.",
      "description_zh": "Sets the maximum height for the component.",
      "required": false
    },
    "max-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the maximum width for the component.",
      "description_zh": "Sets the maximum width for the component.",
      "required": false
    },
    "messages": {
      "default": "[]",
      "value": "",
      "type": "string | string[]",
      "version": "",
      "description": "Displays a list of messages or a single message if using a string.",
      "description_zh": "Displays a list of messages or a single message if using a string.",
      "required": false
    },
    "min": {
      "default": "undefined",
      "value": "",
      "type": "unknown",
      "version": "",
      "description": "Minimum allowed date/month (ISO 8601 format).",
      "description_zh": "Minimum allowed date/month (ISO 8601 format).",
      "required": false
    },
    "min-height": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the minimum height for the component.",
      "description_zh": "Sets the minimum height for the component.",
      "required": false
    },
    "min-width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Sets the minimum width for the component.",
      "description_zh": "Sets the minimum width for the component.",
      "required": false
    },
    "mode-icon": {
      "default": "'$subgroup'",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Icon displayed next to the current month and year, toggles year selection when clicked.",
      "description_zh": "Icon displayed next to the current month and year, toggles year selection when clicked.",
      "required": false
    },
    "v-model": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "version": "",
      "description": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array.",
      "description_zh": "The v-model value of the component. If component supports the multiple prop, this defaults to an empty array.",
      "required": false
    },
    "month": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "The current month number to show",
      "description_zh": "The current month number to show",
      "required": false
    },
    "multiple": {
      "default": "false",
      "value": "",
      "type": "number | boolean | (string & {}) | 'range'",
      "version": "",
      "description": "Allow the selection of multiple dates. The range value selects all dates between two selections.",
      "description_zh": "Allow the selection of multiple dates. The range value selects all dates between two selections.",
      "required": false
    },
    "name": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the component’s name attribute.",
      "description_zh": "Sets the component’s name attribute.",
      "required": false
    },
    "next-icon": {
      "default": "'$next'",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Sets the icon for next month/year button.",
      "description_zh": "Sets the icon for next month/year button.",
      "required": false
    },
    "ok-text": {
      "default": "'$vuetify.confirmEdit.ok'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Text for the ok button",
      "description_zh": "Text for the ok button",
      "required": false
    },
    "persistent-clear": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
      "description_zh": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
      "required": false
    },
    "persistent-counter": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Forces counter to always be visible.",
      "description_zh": "Forces counter to always be visible.",
      "required": false
    },
    "persistent-hint": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Forces hint to always be visible.",
      "description_zh": "Forces hint to always be visible.",
      "required": false
    },
    "persistent-placeholder": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Forces placeholder to always be visible.",
      "description_zh": "Forces placeholder to always be visible.",
      "required": false
    },
    "placeholder": {
      "default": "'mm/dd/yyyy'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Sets the input’s placeholder text.",
      "description_zh": "Sets the input’s placeholder text.",
      "required": false
    },
    "position": {
      "default": "undefined",
      "value": "",
      "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'",
      "version": "",
      "description": "Sets the position for the component.",
      "description_zh": "Sets the position for the component.",
      "required": false
    },
    "prefix": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Displays prefix text.",
      "description_zh": "Displays prefix text.",
      "required": false
    },
    "prepend-icon": {
      "default": "'$calendar'",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Prepends an icon to the outnside the component’s input, uses the same syntax as v-icon.",
      "description_zh": "Prepends an icon to the outnside the component’s input, uses the same syntax as v-icon.",
      "required": false
    },
    "prepend-inner-icon": {
      "default": "undefined",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Creates a v-icon component in the prepend-inner slot.",
      "description_zh": "Creates a v-icon component in the prepend-inner slot.",
      "required": false
    },
    "prev-icon": {
      "default": "'$prev'",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Sets the icon for previous month/year button.",
      "description_zh": "Sets the icon for previous month/year button.",
      "required": false
    },
    "readonly": {
      "default": "null",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Makes the picker readonly (doesn’t allow to select new date).",
      "description_zh": "Makes the picker readonly (doesn’t allow to select new date).",
      "required": false
    },
    "reverse": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Reverses the orientation.",
      "description_zh": "Reverses the orientation.",
      "required": false
    },
    "reverse-transition": {
      "default": "'picker-reverse-transition'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The transition used when changing months into the past",
      "description_zh": "The transition used when changing months into the past",
      "required": false
    },
    "role": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The role attribute applied to the input.",
      "description_zh": "The role attribute applied to the input.",
      "required": false
    },
    "rounded": {
      "default": "undefined",
      "value": "",
      "type": "string | number | boolean",
      "version": "",
      "description": "Adds a border radius to the input.",
      "description_zh": "Adds a border radius to the input.",
      "required": false
    },
    "rules": {
      "default": "[]",
      "value": "",
      "type": "ValidationRule[]",
      "version": "",
      "description": "Accepts a mixed array of types function, boolean and string. Functions pass an input value as an argument and must return either true / false or a string containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) false or is a string.",
      "description_zh": "Accepts a mixed array of types function, boolean and string. Functions pass an input value as an argument and must return either true / false or a string containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) false or is a string.",
      "required": false
    },
    "show-adjacent-months": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Toggles visibility of days from previous and next months.",
      "description_zh": "Toggles visibility of days from previous and next months.",
      "required": false
    },
    "show-week": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Toggles visibility of the week numbers in the body of the calendar.",
      "description_zh": "Toggles visibility of the week numbers in the body of the calendar.",
      "required": false
    },
    "single-line": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Label does not move on focus/dirty.",
      "description_zh": "Label does not move on focus/dirty.",
      "required": false
    },
    "suffix": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Displays suffix text.",
      "description_zh": "Displays suffix text.",
      "required": false
    },
    "tag": {
      "default": "'div'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a custom tag used on the root element.",
      "description_zh": "Specify a custom tag used on the root element.",
      "required": false
    },
    "text": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify content text for the component.",
      "description_zh": "Specify content text for the component.",
      "required": false
    },
    "theme": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a theme for this component and all of its children.",
      "description_zh": "Specify a theme for this component and all of its children.",
      "required": false
    },
    "tile": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Removes any applied border-radius from the component.",
      "description_zh": "Removes any applied border-radius from the component.",
      "required": false
    },
    "title": {
      "default": "'$vuetify.datePicker.title'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Specify a title text for the component.",
      "description_zh": "Specify a title text for the component.",
      "required": false
    },
    "transition": {
      "default": "'picker-transition'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "The transition used when changing months into the future",
      "description_zh": "The transition used when changing months into the future",
      "required": false
    },
    "type": {
      "default": "'text'",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Determines the type of the picker - date for date picker, month for month picker.",
      "description_zh": "Determines the type of the picker - date for date picker, month for month picker.",
      "required": false
    },
    "validate-on": {
      "default": "undefined",
      "value": "",
      "type": "  | 'blur'  | 'input'  | 'submit'  | 'invalid-input'  | 'blur lazy'  | 'input lazy'  | 'submit lazy'  | 'invalid-input lazy'  | 'blur eager'  | 'input eager'  | 'submit eager'  | 'invalid-input eager'  | 'lazy blur'  | 'lazy input'  | 'lazy submit'  | 'lazy invalid-input'  | 'eager blur'  | 'eager input'  | 'eager submit'  | 'eager invalid-input'  | 'lazy'  | 'eager'",
      "version": "",
      "description": "Change what type of event triggers validation to run.",
      "description_zh": "Change what type of event triggers validation to run.",
      "required": false
    },
    "validation-value": {
      "default": "undefined",
      "value": "",
      "type": "any",
      "version": "",
      "description": "The value used when applying validation rules.",
      "description_zh": "The value used when applying validation rules.",
      "required": false
    },
    "variant": {
      "default": "'filled'",
      "value": "",
      "type": "  | 'underlined'  | 'outlined'  | 'filled'  | 'solo'  | 'solo-inverted'  | 'solo-filled'  | 'plain'",
      "version": "",
      "description": "Applies a distinct style to the component.",
      "description_zh": "Applies a distinct style to the component.",
      "required": false
    },
    "view-mode": {
      "default": "'month'",
      "value": "",
      "type": "'month' | 'months' | 'year'",
      "version": "",
      "description": "Determines which picker in the date or month picker is being displayed. Allowed values: 'month', 'months', 'year'.",
      "description_zh": "Determines which picker in the date or month picker is being displayed. Allowed values: 'month', 'months', 'year'.",
      "required": false
    },
    "weekdays": {
      "default": "[0, 1, 2, 3, 4, 5, 6]",
      "value": "",
      "type": "number[]",
      "version": "",
      "description": "An array of weekdays to display.",
      "description_zh": "An array of weekdays to display.",
      "required": false
    },
    "weeks-in-month": {
      "default": "'dynamic'",
      "value": "",
      "type": "'dynamic' | 'static'",
      "version": "",
      "description": "A dynamic number of weeks in a month will grow and shrink depending on how many days are in the month. A static number always shows 7 weeks.",
      "description_zh": "A dynamic number of weeks in a month will grow and shrink depending on how many days are in the month. A static number always shows 7 weeks.",
      "required": false
    },
    "width": {
      "default": "undefined",
      "value": "",
      "type": "string | number",
      "version": "",
      "description": "Width of the picker.",
      "description_zh": "Width of the picker.",
      "required": false
    },
    ":year": {
      "default": "undefined",
      "value": "",
      "type": "number",
      "version": "",
      "description": "The current year number to show",
      "description_zh": "The current year number to show",
      "required": false
    }
  },
  "link": "https://vuetifyjs.com/en/api/v-date-input/",
  "link_zh": "https://vuetifyjs.com/en/api/v-date-input/",
  "typeDetail": {},
  "events": [
    {
      "name": "click:append",
      "description": "Emitted when append icon is clicked.",
      "description_zh": "Emitted when append icon is clicked.",
      "params": "[MouseEvent]"
    },
    {
      "name": "click:appendInner",
      "description": "Emitted when appended inner icon is clicked.",
      "description_zh": "Emitted when appended inner icon is clicked.",
      "params": "[MouseEvent]"
    },
    {
      "name": "click:clear",
      "description": "Emitted when clearable icon clicked.",
      "description_zh": "Emitted when clearable icon clicked.",
      "params": "[MouseEvent]"
    },
    {
      "name": "click:prepend",
      "description": "Emitted when prepended icon is clicked.",
      "description_zh": "Emitted when prepended icon is clicked.",
      "params": "[MouseEvent]"
    },
    {
      "name": "click:prependInner",
      "description": "Emitted when prepended inner icon is clicked.",
      "description_zh": "Emitted when prepended inner icon is clicked.",
      "params": "[MouseEvent]"
    },
    {
      "name": "update:focused",
      "description": "Emitted when the input is focused or blurred",
      "description_zh": "Emitted when the input is focused or blurred",
      "params": "[boolean]"
    },
    {
      "name": "update:modelValue",
      "description": "Event that is emitted when the component’s model changes.",
      "description_zh": "Event that is emitted when the component’s model changes.",
      "params": "[string]"
    }
  ],
  "methods": [],
  "slots": [
    {
      "name": "default",
      "description": "The default Vue slot.",
      "description_zh": "The default Vue slot.",
      "params": ""
    }
  ],
  "exposed": []
}
