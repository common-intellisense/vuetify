{
  "name": "VDataTableHeaders",
  "props": {
    "color": {
      "default": "undefined",
      "value": "",
      "type": "string",
      "version": "",
      "description": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "description_zh": "Applies specified color to the control - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the colors page.",
      "required": false
    },
    "disable-sort": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Toggles rendering of sort button.",
      "description_zh": "Toggles rendering of sort button.",
      "required": false
    },
    "header-props": {
      "default": "undefined",
      "value": "",
      "type": "unknown",
      "version": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "required": false
    },
    "loading": {
      "default": "false",
      "value": "",
      "type": "string | boolean",
      "version": "",
      "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it’s supported by the component) or the primary color.",
      "description_zh": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it’s supported by the component) or the primary color.",
      "required": false
    },
    "mobile": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Determines the display mode of the component. If true, the component will be displayed in mobile mode. If false, the component will be displayed in desktop mode. If null, will be based on the current mobile-breakpoint",
      "description_zh": "Determines the display mode of the component. If true, the component will be displayed in mobile mode. If false, the component will be displayed in desktop mode. If null, will be based on the current mobile-breakpoint",
      "required": false
    },
    "mobile-breakpoint": {
      "default": "undefined",
      "value": "",
      "type": "number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'",
      "version": "",
      "description": "Overrides the display configuration default screen size that the component should be considered in mobile.",
      "description_zh": "Overrides the display configuration default screen size that the component should be considered in mobile.",
      "required": false
    },
    "multi-sort": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "required": false
    },
    "sort-asc-icon": {
      "default": "'$sortAsc'",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Icon used for ascending sort button.",
      "description_zh": "Icon used for ascending sort button.",
      "required": false
    },
    "sort-desc-icon": {
      "default": "'$sortDesc'",
      "value": "",
      "type": "  | string  | (string | [string, number])[]  | (new () => any)  | FunctionalComponent",
      "version": "",
      "description": "Icon used for descending sort button.",
      "description_zh": "Icon used for descending sort button.",
      "required": false
    },
    "sticky": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "version": "",
      "description": "Sticks the header to the top of the table.",
      "description_zh": "Sticks the header to the top of the table.",
      "required": false
    }
  },
  "link": "https://vuetifyjs.com/en/api/v-data-table-headers/",
  "link_zh": "https://vuetifyjs.com/en/api/v-data-table-headers/",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [
    {
      "name": "[`header.${string}`]",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "params": "{\n  column: InternalDataTableHeader\n  selectAll: (value: boolean) => void\n  isSorted: (column: InternalDataTableHeader) => boolean\n  toggleSort: (column: InternalDataTableHeader) => void\n  sortBy: SortItem[]\n  someSelected: boolean\n  allSelected: boolean\n  getSortIcon: (\n    column: InternalDataTableHeader,\n  ) =>\n    | string\n    | (string | [string, number])[]\n    | (new () => any)\n    | FunctionalComponent\n}"
    },
    {
      "name": "header.data-table-expand",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "params": "{\n  column: InternalDataTableHeader\n  selectAll: (value: boolean) => void\n  isSorted: (column: InternalDataTableHeader) => boolean\n  toggleSort: (column: InternalDataTableHeader) => void\n  sortBy: SortItem[]\n  someSelected: boolean\n  allSelected: boolean\n  getSortIcon: (\n    column: InternalDataTableHeader,\n  ) =>\n    | string\n    | (string | [string, number])[]\n    | (new () => any)\n    | FunctionalComponent\n}"
    },
    {
      "name": "header.data-table-select",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "params": "{\n  column: InternalDataTableHeader\n  selectAll: (value: boolean) => void\n  isSorted: (column: InternalDataTableHeader) => boolean\n  toggleSort: (column: InternalDataTableHeader) => void\n  sortBy: SortItem[]\n  someSelected: boolean\n  allSelected: boolean\n  getSortIcon: (\n    column: InternalDataTableHeader,\n  ) =>\n    | string\n    | (string | [string, number])[]\n    | (new () => any)\n    | FunctionalComponent\n}"
    },
    {
      "name": "headers",
      "description": "MISSING DESCRIPTION (edit in github)",
      "description_zh": "MISSING DESCRIPTION (edit in github)",
      "params": "{\n  headers: InternalDataTableHeader[][]\n  columns: InternalDataTableHeader[]\n  sortBy: SortItem[]\n  someSelected: boolean\n  allSelected: boolean\n  toggleSort: (column: InternalDataTableHeader) => void\n  selectAll: (value: boolean) => void\n  getSortIcon: (\n    column: InternalDataTableHeader,\n  ) =>\n    | string\n    | (string | [string, number])[]\n    | (new () => any)\n    | FunctionalComponent\n  isSorted: (column: InternalDataTableHeader) => boolean\n}"
    },
    {
      "name": "loader",
      "description": "Slot for custom loader (displayed when loading prop is equal to true).",
      "description_zh": "Slot for custom loader (displayed when loading prop is equal to true).",
      "params": "{ color: string; isActive: boolean }"
    }
  ],
  "exposed": []
}
